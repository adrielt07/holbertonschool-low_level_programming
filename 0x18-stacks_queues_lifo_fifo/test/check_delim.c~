#include "monty.h"

/**
 * check_delim - checks if a char byte is one of the delimeters use for strtok
 * @string: takes a string
 * @Return: 1 if char is a delimeter, else 0
 */
int check_delim(char c)
{
	int i = 0;

	while (delim[i])
	{
		if (c == delim[i])
			return (1);
		else
			i++;
	}
	return (0);
}

/**
 * tok_num - calculate how many tokens in a string
 * @string: takes a string
 * Return: Number of tokens
 */
int tok_num(char *string)
{
        int len = 0, i = 0;

	printf("Checking each char:\n");
	while(string[i])
	{
		if (check_delim(string[i]) == 0)
		{
			printf("Not a delim - Char: %c entering a new loop\n", string[i]);
			printf("-------\n");
			while (check_delim(string[i]) == 0)
			{
				printf("\tNot a delim - char: %c\n", string[i]);
				i++;
			}
		}
		else
		{
			printf("This is a delim - Char: %c\n", string[i]);
			i++;
		}
	}

	printf("string is: %s\n", string);
	return (len);
}

/**
 *
 */
char **tokenizer(char *str1)
{
	char **tokens;
	int num_tokens = 0, i = 0;
/*
	num_tokens = tok_num(string);
	printf("Number of tokens: %d\n", num_tokens);
	tokens = malloc(sizeof(char *) * num_tokens);
	if (tokens == NULL)
		return (NULL);

	tokens[i] = strtok(string, delim);
	while (tokens[i])
	{
		tokens[i] = strtok(NULL, delim);
		i++;
	}
	return (tokens);
*/
}

/**
 *
 */
int main(void)
{
	char *str = "   push 4";
	char **tokens;
	int len = 0;

	len = tok_num(str);
//	printf("number of tokens: %d\n", len);

/**
	printf("Tokenizing:\n");
	tokens = tokenizer(str);
	printf("value of each tokens\n");
	while (tokens[len])
	{
		printf("token[%d]: %s", len, tokens[len]);
		len++;
	}
*/
}
